# Default values for distributed-training
# This is a YAML-formatted file.

# Replica count (number of worker pods)
replicaCount: 4

# Docker image configuration
image:
  repository: your-registry/distributed-training
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Training configuration
training:
  strategy: ddp  # or fsdp
  batchSize: 32
  epochs: 100
  learningRate: 0.001
  mixedPrecision: true
  
  # Resources per GPU pod
  resources:
    limits:
      nvidia.com/gpu: 1
      memory: "32Gi"
      cpu: "8"
    requests:
      nvidia.com/gpu: 1
      memory: "16Gi"
      cpu: "4"

# Environment variables
env:
  - name: NCCL_DEBUG
    value: "INFO"
  - name: NCCL_SOCKET_IFNAME
    value: "eth0"
  - name: PYTHONUNBUFFERED
    value: "1"

# Persistent storage for checkpoints
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 100Gi

# Shared storage (NFS/S3) for multi-node training
sharedStorage:
  enabled: false
  type: nfs  # or s3
  server: "nfs-server.example.com"
  path: "/exports/training-data"
  size: 500Gi

# Service configuration
service:
  type: ClusterIP
  port: 29500
  tensorboardPort: 6006

# TensorBoard configuration
tensorboard:
  enabled: true
  service:
    type: LoadBalancer
    port: 80

# Node selector for GPU nodes
nodeSelector:
  gpu: "true"
  # nvidia.com/gpu.product: "Tesla-V100-SXM2-32GB"

# Tolerations for GPU nodes
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

# Affinity rules
affinity:
  # Prefer to schedule on different nodes
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - distributed-training
          topologyKey: kubernetes.io/hostname

# Security context
securityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

# Pod security context
podSecurityContext:
  privileged: false

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    port: 8000
  grafana:
    enabled: true

# Auto-scaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetGPUUtilization: 80

# Config maps
configMaps:
  training:
    create: true
  scripts:
    create: true

# Health checks
livenessProbe:
  enabled: true
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC
rbac:
  create: true

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network policy
networkPolicy:
  enabled: false

# Annotations
podAnnotations: {}
serviceAnnotations: {}
